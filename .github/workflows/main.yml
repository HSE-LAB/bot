# This is a basic workflow to help you get started with Actions

name: CI


on:
  push:
    branches:
      - main

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Add environment variables to ..env!
        run: |
          echo DEBUG=0 >> .env
          echo ADMINS=${{ secrets.ADMINS }} >> .env
          echo BOT_TOKEN=${{ secrets.BOT_TOKEN }} >> .env
          echo ip=${{ secrets.ip }} >> .env
          echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo POSTGRES_HOST=${{ secrets.POSTGRES_HOST }} >> .env
          echo POSTGRES_PORT=${{ secrets.POSTGRES_PORT }} >> .env
          
      - name: Log in to GitHub Packages
        run: |
          sudo docker login ghcr.io -u hse-lab -p ${{ secrets.PAT }} || true
      - name: Pull images
        run: |
          sudo docker pull ghcr.io/hse-lab/bot:latest || true
      - name: Build images
        run: docker-compose -f docker-compose-ci.yml build
      - name: Push images
        run: |
          sudo docker push ghcr.io/hse-lab/bot:latest
      - name: deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
              mkdir bot || true
              scp ./.env ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/home/${{ secrets.SERVER_USER }}/bot/.env
              scp ./docker-compose.yml.prod ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/home/${{ secrets.SERVER_USER }}/bot/docker-compose.yml.prod
              scp ./app.py ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/home/${{ secrets.SERVER_USER }}/bot/app.py
              chmod +x ./app.py
              mkdir bot/docker || true
              cd /home/bot/docker
              sudo docker login ghcr.io -u hse-lab -p ${{secrets.PAT}} || true
              sudo docker pull ghcr.io/hse-lab/bot:latest
              sudo docker-compose -f docker-compose.yml.prod up -d
              sudo docker rmi $(sudo docker images -f dangling=true -q)|| true
          
          
    

