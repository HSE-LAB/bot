import logging
from loader import dp,db
from aiogram.types import Message
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from keyboards.inline.options import show_categories_buttons,make_order


@dp.message_handler(Text(equals="üîç –ö–∞—Ç–∞–ª–æ–≥"))
async def show_categories(message: Message):
    categories = [category['category'] for category in await db.select_all_categories()]
    await message.answer("–í –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ –ø—Ä–æ–¥–∞—é—Ç—Å—è —Ç–æ–≤–∞—Ä—ã —Å–ª–µ–¥—É—é—â–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π", reply_markup=await show_categories_buttons(categories))

@dp.message_handler(Text(equals="üõí –ú–æ—è –∫–æ—Ä–∑–∏–Ω–∞"))
async def show_cart(message: Message, state: FSMContext):
    item_string = "\n"
    total = 0
    cart = (await state.get_data()).get("cart")
    if not len(cart):
        await message.answer(text="üòû–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞üòû\n\n"\
         "–ù–∞–∂–º–∏ –Ω–∞ 'üîç –ö–∞—Ç–∞–ª–æ–≥' –≤ –Ω–∏–∂–Ω–µ–π –ø–∞–Ω–µ–ª–∏, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞—à–∏ —Ç–æ–≤–∞—Ä—ãüòâ")
        return
    for item in cart:
        total += int(cart[item]['price']) * int(cart[item]['quantity'])
        item_string = "".join([item_string,f"{item}: ",
                        f"{cart[item]['price']} * {cart[item]['quantity']}\n"\
                        f"üíµ–ù–∞ —Å—É–º–º—É: {int(cart[item]['price']) * int(cart[item]['quantity'])}üíµ\n"])
    txt = f'‚ú®‚ú®‚ú®‚ú®‚ú®‚ú®\n'\
         "–í –≤–∞—à–µ–π –∫–æ—Ä–∑–∏–Ω–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ —Ç–æ–≤–∞—Ä—ã:\n"\
         f"{item_string}\n"\
         f"–û–±—â–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞: üí≤{total}\n"\
         "‚ú®‚ú®‚ú®‚ú®‚ú®‚ú®\n"
    await message.answer(text=txt,reply_markup=await make_order())
    





